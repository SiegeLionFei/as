import os
from building import *

cwd = GetCurrentDir()

Import('asenv')

assert(asenv['BOARD'] == 'posix')

objs = []

asenv.Append(CCFLAGS='-I%s'%(cwd))
asenv.Append(CCFLAGS='-I%s/rs232'%(cwd))
if(IsPlatformWindows()):
    asenv.Append(CCFLAGS='-I%s/peak-can'%(cwd))
    MKSymlink('%s/../../cancasexl.access/vxlapi.h'%(cwd),'%s/vxlapi.h'%(cwd))
    MKSymlink('%s/../../cancasexl.access/xlLoadlib.cpp'%(cwd),'%s/xlLoadlib.c'%(cwd))
    asenv.Append(CCFLAGS=['-DDYNAMIC_XLDRIVER_DLL', '-DPOINTER_32='])
    if(asenv['msys2']):
        asenv.Append(CCFLAGS='-I%s/release/download/ControlCAN/64'%(asenv['ASROOT']))
        
        MKSymlink('%s/release/download/ControlCAN/64/ControlCAN.dll'%(asenv['ASROOT']),
                  '%s/release/%s/ControlCAN.dll'%(asenv['ASROOT'],asenv['RELEASE']))
        MKSymlink('%s/release/download/pcan-basic/"PCAN-Basic API"/x64/PCANBasic.dll'%(asenv['ASROOT']),
                  '%s/release/%s/PCANBasic.dll'%(asenv['ASROOT'],asenv['RELEASE']))
    else:
        asenv.Append(CCFLAGS='-I%s/release/download/ControlCAN/32'%(asenv['ASROOT']))
        MKSymlink('%s/release/download/ControlCAN/32/ControlCAN.dll'%(asenv['ASROOT']),
                  '%s/release/%s/ControlCAN.dll'%(asenv['ASROOT'],asenv['RELEASE']))
        MKSymlink('%s/release/download/pcan-basic/"PCAN-Basic API"/Win32/PCANBasic.dll'%(asenv['ASROOT']),
                  '%s/release/%s/PCANBasic.dll'%(asenv['ASROOT'],asenv['RELEASE']))

objs +=  Glob('*.c')
objs +=  Glob('rs232/*.c')

if(IsPlatformWindows()):
    if(asenv['msys2']):
        objs += Glob('%s/release/download/pcan-basic/PCAN-Basic API/x64/VC_LIB/PCANBasic.lib'%(asenv['ASROOT']))
        objs += Glob('%s/release/download/ControlCAN/64/ControlCAN.lib'%(asenv['ASROOT']))
    else:
        objs += Glob('%s/release/download/pcan-basic/PCAN-Basic API/Win32/VC_LIB/PCANBasic.lib'%(asenv['ASROOT']))
        objs += Glob('%s/release/download/ControlCAN/32/ControlCAN.lib'%(asenv['ASROOT']))
src = '%s/socketwin_can_driver.c'%(cwd)
tgt = '%s/../script/socketwin_can_driver.exe'%(cwd)
cmd = 'gcc %s -D__SOCKET_WIN_CAN_DRIVER__ -I%s/com/as.infrastructure/include -o %s'%(src,asenv['ASROOT'],tgt)
if(IsPlatformWindows()):
    cmd += ' -D__WINDOWS__ -lwsock32'
else:
    cmd += ' -D__LINUX__'
MKObject([src], tgt, cmd)

Return('objs')
